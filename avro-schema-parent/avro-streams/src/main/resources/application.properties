quarkus.kafka-streams.application-id=avro-order-aggregator
quarkus.kafka-streams.topics=avro.orders,avro.customers
quarkus.kafka-streams.schema-registry-url=http://localhost:9081/
quarkus.kafka-streams.bootstrap-servers=localhost:9092

quarkus.kafka-streams.application-server=frl-fvfxq0suhv2j:11002
%dev.quarkus.log.category."io.confluent.kafka.schemaregistry.client.rest".level=DEBUG
%dev.quarkus.http.port=11002
%dev.quarkus.devservices.enabled=false
kafka.bootstrap.servers=localhost:9092

quarkus.kafka.health.enabled=true

# streams options
kafka-streams.cache.max.bytes.buffering=10240
kafka-streams.commit.interval.ms=1000
kafka-streams.metadata.max.age.ms=500
kafka-streams.auto.offset.reset=earliest
kafka-streams.metrics.recording.level=DEBUG
kafka-streams.consumer.heartbeat.interval.ms=200
kafka-streams.schema.registry.url=http://localhost:9081/

#########################
## incoming from Kafka ##
#########################
mp.messaging.connector.smallrye-kafka.schema.registry.url=http://localhost:9081/
mp.messaging.connector.smallrye-kafka.value.deserializer=io.confluent.kafka.serializers.KafkaAvroDeserializer

# set the connector for the incoming channel to `smallrye-kafka`
mp.messaging.incoming.avro-order-aggregated.connector=smallrye-kafka

# set the topic name for the channel to `avro.orders.aggregated`
mp.messaging.incoming.avro-order-aggregated.topic=avro.orders.aggregated

mp.messaging.incoming.avro-order-aggregated.value.deserializer=io.confluent.kafka.serializers.KafkaAvroDeserializer
mp.messaging.incoming.avro-order-aggregated.schema.registry.url=http://localhost:9081/
mp.messaging.incoming.avro-order-aggregated.specific.avro.reader=true
